import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { Toast } from './toast.component';
import { DefaultNoComponentGlobalConfig, TOAST_CONFIG, } from './toastr-config';
import * as ɵngcc0 from '@angular/core';
export var DefaultGlobalConfig = tslib_1.__assign({}, DefaultNoComponentGlobalConfig, { toastComponent: Toast });
var ToastrModule = /** @class */ (function () {
    function ToastrModule() {
    }
    ToastrModule_1 = ToastrModule;
    ToastrModule.forRoot = function (config) {
        if (config === void 0) { config = {}; }
        return {
            ngModule: ToastrModule_1,
            providers: [
                {
                    provide: TOAST_CONFIG,
                    useValue: {
                        default: DefaultGlobalConfig,
                        config: config,
                    },
                },
            ],
        };
    };
    var ToastrModule_1;
ToastrModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: ToastrModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(ToastrModule, { declarations: function () { return [Toast]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Toast]; } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(ToastrModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [Toast],
                exports: [Toast],
                entryComponents: [Toast]
            }]
    }], function () { return []; }, null);
ToastrModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function ToastrModule_Factory(t) { return new (t || ToastrModule)(); }, imports: [[CommonModule]] });
    return ToastrModule;
}());
export { ToastrModule };
var ToastrComponentlessModule = /** @class */ (function () {
    function ToastrComponentlessModule() {
    }
    ToastrComponentlessModule.forRoot = function (config) {
        if (config === void 0) { config = {}; }
        return {
            ngModule: ToastrModule,
            providers: [
                {
                    provide: TOAST_CONFIG,
                    useValue: {
                        default: DefaultNoComponentGlobalConfig,
                        config: config,
                    },
                },
            ],
        };
    };
ToastrComponentlessModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: ToastrComponentlessModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(ToastrComponentlessModule, { imports: function () { return [CommonModule]; } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(ToastrComponentlessModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule]
            }]
    }], function () { return []; }, null);
ToastrComponentlessModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function ToastrComponentlessModule_Factory(t) { return new (t || ToastrComponentlessModule)(); }, imports: [[CommonModule]] });
    return ToastrComponentlessModule;
}());
export { ToastrComponentlessModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL1BhdHJpbW9uaW8gU09NVS9Eb2N1bWVudHMvUHJveWVjdG8gRklOQUwvbW9kdWxvLTgtZnJvbnQtbWFpbi1tYWluL25vZGVfbW9kdWxlcy9uZ3gtdG9hc3RyL2VzbTUvdG9hc3RyL3RvYXN0ci5tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt1QkFvQnVCOzs7Ozs7Ozs7Ozs7cUtBUUY7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQXFCZjs7Ozs7Ozs7OzRNQUs0QiIsImZpbGUiOiJ0b2FzdHIubW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVG9hc3QgfSBmcm9tICcuL3RvYXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZWZhdWx0Tm9Db21wb25lbnRHbG9iYWxDb25maWcsIFRPQVNUX0NPTkZJRywgfSBmcm9tICcuL3RvYXN0ci1jb25maWcnO1xuZXhwb3J0IHZhciBEZWZhdWx0R2xvYmFsQ29uZmlnID0gdHNsaWJfMS5fX2Fzc2lnbih7fSwgRGVmYXVsdE5vQ29tcG9uZW50R2xvYmFsQ29uZmlnLCB7IHRvYXN0Q29tcG9uZW50OiBUb2FzdCB9KTtcbnZhciBUb2FzdHJNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVG9hc3RyTW9kdWxlKCkge1xuICAgIH1cbiAgICBUb2FzdHJNb2R1bGVfMSA9IFRvYXN0ck1vZHVsZTtcbiAgICBUb2FzdHJNb2R1bGUuZm9yUm9vdCA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICAgICAgaWYgKGNvbmZpZyA9PT0gdm9pZCAwKSB7IGNvbmZpZyA9IHt9OyB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuZ01vZHVsZTogVG9hc3RyTW9kdWxlXzEsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3ZpZGU6IFRPQVNUX0NPTkZJRyxcbiAgICAgICAgICAgICAgICAgICAgdXNlVmFsdWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IERlZmF1bHRHbG9iYWxDb25maWcsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWc6IGNvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIHZhciBUb2FzdHJNb2R1bGVfMTtcbiAgICBUb2FzdHJNb2R1bGUgPSBUb2FzdHJNb2R1bGVfMSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIE5nTW9kdWxlKHtcbiAgICAgICAgICAgIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbVG9hc3RdLFxuICAgICAgICAgICAgZXhwb3J0czogW1RvYXN0XSxcbiAgICAgICAgICAgIGVudHJ5Q29tcG9uZW50czogW1RvYXN0XSxcbiAgICAgICAgfSlcbiAgICBdLCBUb2FzdHJNb2R1bGUpO1xuICAgIHJldHVybiBUb2FzdHJNb2R1bGU7XG59KCkpO1xuZXhwb3J0IHsgVG9hc3RyTW9kdWxlIH07XG52YXIgVG9hc3RyQ29tcG9uZW50bGVzc01vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUb2FzdHJDb21wb25lbnRsZXNzTW9kdWxlKCkge1xuICAgIH1cbiAgICBUb2FzdHJDb21wb25lbnRsZXNzTW9kdWxlLmZvclJvb3QgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIGlmIChjb25maWcgPT09IHZvaWQgMCkgeyBjb25maWcgPSB7fTsgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IFRvYXN0ck1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvdmlkZTogVE9BU1RfQ09ORklHLFxuICAgICAgICAgICAgICAgICAgICB1c2VWYWx1ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDogRGVmYXVsdE5vQ29tcG9uZW50R2xvYmFsQ29uZmlnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnOiBjb25maWcsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBUb2FzdHJDb21wb25lbnRsZXNzTW9kdWxlID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcbiAgICAgICAgTmdNb2R1bGUoe1xuICAgICAgICAgICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG4gICAgICAgIH0pXG4gICAgXSwgVG9hc3RyQ29tcG9uZW50bGVzc01vZHVsZSk7XG4gICAgcmV0dXJuIFRvYXN0ckNvbXBvbmVudGxlc3NNb2R1bGU7XG59KCkpO1xuZXhwb3J0IHsgVG9hc3RyQ29tcG9uZW50bGVzc01vZHVsZSB9O1xuIl19