import * as ɵngcc0 from '@angular/core';
var ToastrModule_1;
import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { Toast } from './toast.component';
import { DefaultNoComponentGlobalConfig, TOAST_CONFIG, } from './toastr-config';
export const DefaultGlobalConfig = Object.assign({}, DefaultNoComponentGlobalConfig, { toastComponent: Toast });
let ToastrModule = ToastrModule_1 = class ToastrModule {
    static forRoot(config = {}) {
        return {
            ngModule: ToastrModule_1,
            providers: [
                {
                    provide: TOAST_CONFIG,
                    useValue: {
                        default: DefaultGlobalConfig,
                        config,
                    },
                },
            ],
        };
    }
}
ToastrModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: ToastrModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(ToastrModule, { declarations: function () { return [Toast]; }, imports: function () { return [CommonModule]; }, exports: function () { return [Toast]; } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(ToastrModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [Toast],
                exports: [Toast],
                entryComponents: [Toast]
            }]
    }], null, null);
ToastrModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function ToastrModule_Factory(t) { return new (t || ToastrModule)(); }, imports: [[CommonModule]] });;
export { ToastrModule };
let ToastrComponentlessModule = class ToastrComponentlessModule {
    static forRoot(config = {}) {
        return {
            ngModule: ToastrModule,
            providers: [
                {
                    provide: TOAST_CONFIG,
                    useValue: {
                        default: DefaultNoComponentGlobalConfig,
                        config,
                    },
                },
            ],
        };
    }
}
ToastrComponentlessModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: ToastrComponentlessModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(ToastrComponentlessModule, { imports: function () { return [CommonModule]; } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(ToastrComponentlessModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule]
            }]
    }], null, null);
ToastrComponentlessModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function ToastrComponentlessModule_Factory(t) { return new (t || ToastrComponentlessModule)(); }, imports: [[CommonModule]] });;
export { ToastrComponentlessModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL1BhdHJpbW9uaW8gU09NVS9Eb2N1bWVudHMvUHJveWVjdG8gRklOQUwvbW9kdWxvLTgtZnJvbnQtbWFpbi1tYWluL25vZGVfbW9kdWxlcy9uZ3gtdG9hc3RyL2VzbTIwMTUvdG9hc3RyL3RvYXN0ci5tb2R1bGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3FLQXNCQyxDQUFDLEFBUWU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRNQWlCaEIsQ0FBQyxBQUs0QiIsImZpbGUiOiJ0b2FzdHIubW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFRvYXN0ck1vZHVsZV8xO1xuaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVG9hc3QgfSBmcm9tICcuL3RvYXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZWZhdWx0Tm9Db21wb25lbnRHbG9iYWxDb25maWcsIFRPQVNUX0NPTkZJRywgfSBmcm9tICcuL3RvYXN0ci1jb25maWcnO1xuZXhwb3J0IGNvbnN0IERlZmF1bHRHbG9iYWxDb25maWcgPSBPYmplY3QuYXNzaWduKHt9LCBEZWZhdWx0Tm9Db21wb25lbnRHbG9iYWxDb25maWcsIHsgdG9hc3RDb21wb25lbnQ6IFRvYXN0IH0pO1xubGV0IFRvYXN0ck1vZHVsZSA9IFRvYXN0ck1vZHVsZV8xID0gY2xhc3MgVG9hc3RyTW9kdWxlIHtcbiAgICBzdGF0aWMgZm9yUm9vdChjb25maWcgPSB7fSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IFRvYXN0ck1vZHVsZV8xLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwcm92aWRlOiBUT0FTVF9DT05GSUcsXG4gICAgICAgICAgICAgICAgICAgIHVzZVZhbHVlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiBEZWZhdWx0R2xvYmFsQ29uZmlnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICB9O1xuICAgIH1cbn07XG5Ub2FzdHJNb2R1bGUgPSBUb2FzdHJNb2R1bGVfMSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgTmdNb2R1bGUoe1xuICAgICAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgICAgICAgZGVjbGFyYXRpb25zOiBbVG9hc3RdLFxuICAgICAgICBleHBvcnRzOiBbVG9hc3RdLFxuICAgICAgICBlbnRyeUNvbXBvbmVudHM6IFtUb2FzdF0sXG4gICAgfSlcbl0sIFRvYXN0ck1vZHVsZSk7XG5leHBvcnQgeyBUb2FzdHJNb2R1bGUgfTtcbmxldCBUb2FzdHJDb21wb25lbnRsZXNzTW9kdWxlID0gY2xhc3MgVG9hc3RyQ29tcG9uZW50bGVzc01vZHVsZSB7XG4gICAgc3RhdGljIGZvclJvb3QoY29uZmlnID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBUb2FzdHJNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3ZpZGU6IFRPQVNUX0NPTkZJRyxcbiAgICAgICAgICAgICAgICAgICAgdXNlVmFsdWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IERlZmF1bHROb0NvbXBvbmVudEdsb2JhbENvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfTtcbiAgICB9XG59O1xuVG9hc3RyQ29tcG9uZW50bGVzc01vZHVsZSA9IHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgTmdNb2R1bGUoe1xuICAgICAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgICB9KVxuXSwgVG9hc3RyQ29tcG9uZW50bGVzc01vZHVsZSk7XG5leHBvcnQgeyBUb2FzdHJDb21wb25lbnRsZXNzTW9kdWxlIH07XG4iXX0=